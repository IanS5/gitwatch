// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.proto

/*
Package gitwatch is a generated protocol buffer package.

It is generated from these files:
	github.proto

It has these top-level messages:
	Target
	Repo
	User
	Org
	PushPayload
	PullRequestPayload
	Event
*/
package gitwatch

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EventType int32

const (
	EventType_PULL_REQUEST EventType = 0
	EventType_PUSH         EventType = 1
)

var EventType_name = map[int32]string{
	0: "PULL_REQUEST",
	1: "PUSH",
}
var EventType_value = map[string]int32{
	"PULL_REQUEST": 0,
	"PUSH":         1,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}
func (EventType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PullRequestAction int32

const (
	PullRequestAction_ASSIGNED               PullRequestAction = 0
	PullRequestAction_UNASSIGNED             PullRequestAction = 1
	PullRequestAction_REVIEW_REQUESTED       PullRequestAction = 2
	PullRequestAction_REVIEW_REQUEST_REMOVED PullRequestAction = 3
	PullRequestAction_LABELED                PullRequestAction = 4
	PullRequestAction_UNLABELED              PullRequestAction = 5
	PullRequestAction_OPENED                 PullRequestAction = 6
	PullRequestAction_CLOSED                 PullRequestAction = 7
	PullRequestAction_REOPENED               PullRequestAction = 8
)

var PullRequestAction_name = map[int32]string{
	0: "ASSIGNED",
	1: "UNASSIGNED",
	2: "REVIEW_REQUESTED",
	3: "REVIEW_REQUEST_REMOVED",
	4: "LABELED",
	5: "UNLABELED",
	6: "OPENED",
	7: "CLOSED",
	8: "REOPENED",
}
var PullRequestAction_value = map[string]int32{
	"ASSIGNED":               0,
	"UNASSIGNED":             1,
	"REVIEW_REQUESTED":       2,
	"REVIEW_REQUEST_REMOVED": 3,
	"LABELED":                4,
	"UNLABELED":              5,
	"OPENED":                 6,
	"CLOSED":                 7,
	"REOPENED":               8,
}

func (x PullRequestAction) String() string {
	return proto.EnumName(PullRequestAction_name, int32(x))
}
func (PullRequestAction) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PullRequestState int32

const (
	PullRequestState_PR_OPENED PullRequestState = 0
	PullRequestState_PR_CLOSED PullRequestState = 1
)

var PullRequestState_name = map[int32]string{
	0: "PR_OPENED",
	1: "PR_CLOSED",
}
var PullRequestState_value = map[string]int32{
	"PR_OPENED": 0,
	"PR_CLOSED": 1,
}

func (x PullRequestState) String() string {
	return proto.EnumName(PullRequestState_name, int32(x))
}
func (PullRequestState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Target struct {
	User  string    `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Repo  string    `protobuf:"bytes,2,opt,name=repo" json:"repo,omitempty"`
	Event EventType `protobuf:"varint,4,opt,name=event,enum=github.EventType" json:"event,omitempty"`
}

func (m *Target) Reset()                    { *m = Target{} }
func (m *Target) String() string            { return proto.CompactTextString(m) }
func (*Target) ProtoMessage()               {}
func (*Target) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Target) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Target) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *Target) GetEvent() EventType {
	if m != nil {
		return m.Event
	}
	return EventType_PULL_REQUEST
}

type Repo struct {
	Id   int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Repo) Reset()                    { *m = Repo{} }
func (m *Repo) String() string            { return proto.CompactTextString(m) }
func (*Repo) ProtoMessage()               {}
func (*Repo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Repo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Repo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type User struct {
	Id     int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Avatar string `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

type Org struct {
	Id     int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Avatar string `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
}

func (m *Org) Reset()                    { *m = Org{} }
func (m *Org) String() string            { return proto.CompactTextString(m) }
func (*Org) ProtoMessage()               {}
func (*Org) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Org) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Org) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Org) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

type PushPayload struct {
	Ref    string `protobuf:"bytes,1,opt,name=ref" json:"ref,omitempty"`
	Head   string `protobuf:"bytes,2,opt,name=head" json:"head,omitempty"`
	Before string `protobuf:"bytes,3,opt,name=before" json:"before,omitempty"`
}

func (m *PushPayload) Reset()                    { *m = PushPayload{} }
func (m *PushPayload) String() string            { return proto.CompactTextString(m) }
func (*PushPayload) ProtoMessage()               {}
func (*PushPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PushPayload) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *PushPayload) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *PushPayload) GetBefore() string {
	if m != nil {
		return m.Before
	}
	return ""
}

type PullRequestPayload struct {
	Action   PullRequestAction `protobuf:"varint,1,opt,name=action,enum=github.PullRequestAction" json:"action,omitempty"`
	Number   int32             `protobuf:"varint,2,opt,name=number" json:"number,omitempty"`
	State    PullRequestState  `protobuf:"varint,3,opt,name=state,enum=github.PullRequestState" json:"state,omitempty"`
	Id       int64             `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
	Title    string            `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	DiffUrl  string            `protobuf:"bytes,7,opt,name=diff_url,json=diffUrl" json:"diff_url,omitempty"`
	PatchUrl string            `protobuf:"bytes,8,opt,name=patch_url,json=patchUrl" json:"patch_url,omitempty"`
	Body     string            `protobuf:"bytes,9,opt,name=body" json:"body,omitempty"`
}

func (m *PullRequestPayload) Reset()                    { *m = PullRequestPayload{} }
func (m *PullRequestPayload) String() string            { return proto.CompactTextString(m) }
func (*PullRequestPayload) ProtoMessage()               {}
func (*PullRequestPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PullRequestPayload) GetAction() PullRequestAction {
	if m != nil {
		return m.Action
	}
	return PullRequestAction_ASSIGNED
}

func (m *PullRequestPayload) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *PullRequestPayload) GetState() PullRequestState {
	if m != nil {
		return m.State
	}
	return PullRequestState_PR_OPENED
}

func (m *PullRequestPayload) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PullRequestPayload) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PullRequestPayload) GetDiffUrl() string {
	if m != nil {
		return m.DiffUrl
	}
	return ""
}

func (m *PullRequestPayload) GetPatchUrl() string {
	if m != nil {
		return m.PatchUrl
	}
	return ""
}

func (m *PullRequestPayload) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type Event struct {
	Repo *Repo `protobuf:"bytes,1,opt,name=repo" json:"repo,omitempty"`
	Org  *Org  `protobuf:"bytes,2,opt,name=org" json:"org,omitempty"`
	User *User `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*Event_Push
	//	*Event_PullRequest
	Payload isEvent_Payload `protobuf_oneof:"payload"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type isEvent_Payload interface {
	isEvent_Payload()
}

type Event_Push struct {
	Push *PushPayload `protobuf:"bytes,4,opt,name=push,oneof"`
}
type Event_PullRequest struct {
	PullRequest *PullRequestPayload `protobuf:"bytes,5,opt,name=pull_request,json=pullRequest,oneof"`
}

func (*Event_Push) isEvent_Payload()        {}
func (*Event_PullRequest) isEvent_Payload() {}

func (m *Event) GetPayload() isEvent_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Event) GetRepo() *Repo {
	if m != nil {
		return m.Repo
	}
	return nil
}

func (m *Event) GetOrg() *Org {
	if m != nil {
		return m.Org
	}
	return nil
}

func (m *Event) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Event) GetPush() *PushPayload {
	if x, ok := m.GetPayload().(*Event_Push); ok {
		return x.Push
	}
	return nil
}

func (m *Event) GetPullRequest() *PullRequestPayload {
	if x, ok := m.GetPayload().(*Event_PullRequest); ok {
		return x.PullRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Event) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Event_OneofMarshaler, _Event_OneofUnmarshaler, _Event_OneofSizer, []interface{}{
		(*Event_Push)(nil),
		(*Event_PullRequest)(nil),
	}
}

func _Event_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Event)
	// payload
	switch x := m.Payload.(type) {
	case *Event_Push:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Push); err != nil {
			return err
		}
	case *Event_PullRequest:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PullRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Event.Payload has unexpected type %T", x)
	}
	return nil
}

func _Event_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Event)
	switch tag {
	case 4: // payload.push
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PushPayload)
		err := b.DecodeMessage(msg)
		m.Payload = &Event_Push{msg}
		return true, err
	case 5: // payload.pull_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PullRequestPayload)
		err := b.DecodeMessage(msg)
		m.Payload = &Event_PullRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Event_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Event)
	// payload
	switch x := m.Payload.(type) {
	case *Event_Push:
		s := proto.Size(x.Push)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_PullRequest:
		s := proto.Size(x.PullRequest)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Target)(nil), "github.Target")
	proto.RegisterType((*Repo)(nil), "github.Repo")
	proto.RegisterType((*User)(nil), "github.User")
	proto.RegisterType((*Org)(nil), "github.Org")
	proto.RegisterType((*PushPayload)(nil), "github.PushPayload")
	proto.RegisterType((*PullRequestPayload)(nil), "github.PullRequestPayload")
	proto.RegisterType((*Event)(nil), "github.Event")
	proto.RegisterEnum("github.EventType", EventType_name, EventType_value)
	proto.RegisterEnum("github.PullRequestAction", PullRequestAction_name, PullRequestAction_value)
	proto.RegisterEnum("github.PullRequestState", PullRequestState_name, PullRequestState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Github service

type GithubClient interface {
	Subscribe(ctx context.Context, in *Target, opts ...grpc.CallOption) (Github_SubscribeClient, error)
}

type githubClient struct {
	cc *grpc.ClientConn
}

func NewGithubClient(cc *grpc.ClientConn) GithubClient {
	return &githubClient{cc}
}

func (c *githubClient) Subscribe(ctx context.Context, in *Target, opts ...grpc.CallOption) (Github_SubscribeClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Github_serviceDesc.Streams[0], c.cc, "/github.Github/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &githubSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Github_SubscribeClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type githubSubscribeClient struct {
	grpc.ClientStream
}

func (x *githubSubscribeClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Github service

type GithubServer interface {
	Subscribe(*Target, Github_SubscribeServer) error
}

func RegisterGithubServer(s *grpc.Server, srv GithubServer) {
	s.RegisterService(&_Github_serviceDesc, srv)
}

func _Github_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Target)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GithubServer).Subscribe(m, &githubSubscribeServer{stream})
}

type Github_SubscribeServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type githubSubscribeServer struct {
	grpc.ServerStream
}

func (x *githubSubscribeServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

var _Github_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.Github",
	HandlerType: (*GithubServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _Github_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.proto",
}

func init() { proto.RegisterFile("github.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 633 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0x5d, 0x4f, 0xdb, 0x3a,
	0x18, 0xc7, 0x9b, 0xe6, 0xa5, 0xc9, 0x93, 0x52, 0x05, 0x1f, 0x84, 0x02, 0x47, 0x47, 0x42, 0xbd,
	0x81, 0x53, 0x1d, 0x21, 0x4e, 0x26, 0xed, 0x76, 0x6a, 0x57, 0x0b, 0xd0, 0x3a, 0x9a, 0x39, 0x84,
	0x69, 0xbb, 0xa9, 0x12, 0xea, 0xb6, 0x91, 0x42, 0x93, 0xb9, 0x09, 0x13, 0x97, 0xfb, 0x30, 0xfb,
	0x60, 0xfb, 0x26, 0xd3, 0xe3, 0x24, 0x65, 0x6c, 0x5c, 0x4c, 0xda, 0xdd, 0xf3, 0xe6, 0x9f, 0xed,
	0xbf, 0xff, 0x32, 0x74, 0x97, 0x49, 0xb1, 0x2a, 0xe3, 0xd3, 0x5c, 0x64, 0x45, 0x46, 0x8c, 0x2a,
	0xeb, 0x7f, 0x00, 0xe3, 0x3a, 0x12, 0x4b, 0x5e, 0x10, 0x02, 0x5a, 0xb9, 0xe1, 0xc2, 0x55, 0x8e,
	0x94, 0x13, 0x8b, 0xc9, 0x18, 0x6b, 0x82, 0xe7, 0x99, 0xdb, 0xae, 0x6a, 0x18, 0x93, 0x63, 0xd0,
	0xf9, 0x3d, 0x5f, 0x17, 0xae, 0x76, 0xa4, 0x9c, 0xf4, 0xbc, 0xdd, 0xd3, 0x9a, 0x4b, 0xb1, 0x78,
	0xfd, 0x90, 0x73, 0x56, 0xf5, 0xfb, 0x03, 0xd0, 0x18, 0x2e, 0xe8, 0x41, 0x3b, 0x99, 0x4b, 0xac,
	0xca, 0xda, 0xc9, 0x1c, 0xa1, 0xeb, 0xe8, 0x8e, 0x37, 0x50, 0x8c, 0xfb, 0x23, 0xd0, 0x42, 0xdc,
	0xf0, 0x37, 0x66, 0xc9, 0x3e, 0x18, 0xd1, 0x7d, 0x54, 0x44, 0xc2, 0x55, 0x65, 0xb5, 0xce, 0xfa,
	0x43, 0x50, 0xa7, 0x62, 0xf9, 0x47, 0x88, 0x37, 0x60, 0xfb, 0xe5, 0x66, 0xe5, 0x47, 0x0f, 0x69,
	0x16, 0xcd, 0x89, 0x03, 0xaa, 0xe0, 0x8b, 0x5a, 0x11, 0x0c, 0x11, 0xb6, 0xe2, 0xd1, 0xbc, 0x81,
	0x61, 0x8c, 0xb0, 0x98, 0x2f, 0x32, 0xc1, 0x1b, 0x58, 0x95, 0xf5, 0xbf, 0xb4, 0x81, 0xf8, 0x65,
	0x9a, 0x32, 0xfe, 0xa9, 0xe4, 0x9b, 0xa2, 0x81, 0xfe, 0x0f, 0x46, 0x74, 0x5b, 0x24, 0xd9, 0x5a,
	0x72, 0x7b, 0xde, 0x41, 0x23, 0xe0, 0x0f, 0xb3, 0x43, 0x39, 0xc0, 0xea, 0x41, 0xdc, 0x61, 0x5d,
	0xde, 0xc5, 0x5c, 0xc8, 0x7d, 0x75, 0x56, 0x67, 0xe4, 0x14, 0xf4, 0x4d, 0x11, 0x15, 0xd5, 0xc6,
	0x3d, 0xcf, 0x7d, 0x86, 0x14, 0x60, 0x9f, 0x55, 0x63, 0xb5, 0x34, 0xda, 0x56, 0x9a, 0x3d, 0xd0,
	0x8b, 0xa4, 0x48, 0xb9, 0xab, 0xcb, 0x83, 0x57, 0x09, 0x39, 0x00, 0x73, 0x9e, 0x2c, 0x16, 0xb3,
	0x52, 0xa4, 0x6e, 0x47, 0x36, 0x3a, 0x98, 0x87, 0x22, 0x25, 0x7f, 0x83, 0x95, 0x47, 0xc5, 0xed,
	0x4a, 0xf6, 0x4c, 0xd9, 0x33, 0x65, 0x01, 0x9b, 0x04, 0xb4, 0x38, 0x9b, 0x3f, 0xb8, 0x56, 0xa5,
	0x0d, 0xc6, 0xfd, 0x6f, 0x0a, 0xe8, 0xd2, 0x18, 0xe4, 0xa8, 0xb6, 0x12, 0x5e, 0xda, 0xf6, 0xba,
	0xcd, 0x51, 0xd1, 0x21, 0xb5, 0xb1, 0xfe, 0x01, 0x35, 0x13, 0x4b, 0x79, 0x45, 0xdb, 0xb3, 0x9b,
	0x81, 0xa9, 0x58, 0x32, 0xac, 0x23, 0x40, 0xfa, 0x53, 0x7d, 0x0a, 0x40, 0xdb, 0xd4, 0x6e, 0xfd,
	0x17, 0xb4, 0xbc, 0xdc, 0xac, 0xe4, 0x05, 0x6d, 0xef, 0xaf, 0x47, 0x35, 0xb6, 0x2f, 0x7a, 0xd1,
	0x62, 0x72, 0x84, 0xbc, 0x82, 0x6e, 0x5e, 0xa6, 0xe9, 0x4c, 0x54, 0x2a, 0x49, 0x01, 0x6c, 0xef,
	0xf0, 0x19, 0x01, 0x1f, 0x57, 0xda, 0xf9, 0x63, 0x75, 0x64, 0x41, 0x27, 0xaf, 0x3a, 0x83, 0x63,
	0xb0, 0xb6, 0xde, 0x27, 0x0e, 0x74, 0xfd, 0x70, 0x32, 0x99, 0x31, 0xfa, 0x2e, 0xa4, 0xc1, 0xb5,
	0xd3, 0x22, 0x26, 0x68, 0x7e, 0x18, 0x5c, 0x38, 0xca, 0xe0, 0xab, 0x02, 0xbb, 0xbf, 0x3c, 0x32,
	0xe9, 0x82, 0x39, 0x0c, 0x82, 0xcb, 0xf3, 0x2b, 0x3a, 0x76, 0x5a, 0xa4, 0x07, 0x10, 0x5e, 0x6d,
	0x73, 0x85, 0xec, 0x81, 0xc3, 0xe8, 0xcd, 0x25, 0x7d, 0xdf, 0x10, 0xe9, 0xd8, 0x69, 0x93, 0x43,
	0xd8, 0x7f, 0x5a, 0x9d, 0x31, 0xfa, 0x76, 0x7a, 0x43, 0xc7, 0x8e, 0x4a, 0x6c, 0xe8, 0x4c, 0x86,
	0x23, 0x3a, 0xa1, 0x63, 0x47, 0x23, 0x3b, 0x60, 0x85, 0x57, 0x4d, 0xaa, 0x13, 0x00, 0x63, 0xea,
	0x53, 0x24, 0x1b, 0x18, 0xbf, 0x9e, 0x4c, 0x03, 0x3a, 0x76, 0x3a, 0x78, 0x06, 0x46, 0xeb, 0x8e,
	0x39, 0x38, 0x03, 0xe7, 0x67, 0x07, 0x21, 0xc8, 0x67, 0xb3, 0x7a, 0xa4, 0x55, 0xa7, 0xf5, 0x7a,
	0xc5, 0x7b, 0x09, 0xc6, 0xb9, 0x54, 0x8e, 0xfc, 0x07, 0x56, 0x50, 0xc6, 0x9b, 0x5b, 0x91, 0xc4,
	0x9c, 0xf4, 0x1a, 0x3d, 0xab, 0x2f, 0xe6, 0x70, 0xe7, 0xc9, 0x5f, 0x71, 0xa6, 0x8c, 0xe0, 0xa3,
	0xb9, 0x4c, 0x8a, 0xcf, 0xe8, 0xa0, 0xd8, 0x90, 0x1f, 0xd3, 0x8b, 0xef, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x31, 0x29, 0xef, 0x30, 0xa8, 0x04, 0x00, 0x00,
}
